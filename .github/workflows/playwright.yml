name: Playwright Tests
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  
  playwright-tests:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        shard: [1/2, 2/2]
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 18
    - name: Install dependencies
      run: npm ci
    - name: Install Playwright browsers
      run: npx playwright install --with-deps

    - name: Run Playwright tests
      run: npx playwright test --shard ${{ matrix.shard }}

    - name: Upload blob report to GitHub Actions Artifacts
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: all-blob-reports
        path: blob-report
        retention-days: 30

  merge-reports-and-upload:
  # Merge reports after playwright-tests, even if some shards have failed

    permissions:
      contents: read
      pages: write
      id-token: write
      
    if: always()
    needs: [playwright-tests]
    
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 18
    - name: Install dependencies
      run: npm ci

    - name: Download blob reports from GitHub Actions Artifacts
      uses: actions/download-artifact@v3
      with:
        name: all-blob-reports
        path: all-blob-reports

    - name: Merge into HTML Report
      run: npx playwright merge-reports --reporter html ./all-blob-reports

    - name: Setup Pages
      uses: actions/configure-pages@v3

    - name: Upload HTML Report from folder generated by playwright merge-reports method
      uses: actions/upload-pages-artifact@v2
      with:
        path: './playwright-report'

    - name: Set New URL
      id: set-url
      run: echo "new_url=https://$GITHUB_REPOSITORY/$GITHUB_RUN_NUMBER" >> $GITHUB_OUTPUT

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v2
      env:
        NEW_URL: ${{ steps.set-url.outputs.new_url }}

    - name: Generate Report URL
      run: echo "${{ steps.deployment.outputs.page_url }}" > url.txt

    - name: Print out Report URL for Summary on workflow
      uses: actions/upload-artifact@v2
      with:
        name: url
        path: url.txt





        