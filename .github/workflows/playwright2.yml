name: Playwright-Tests-v2
on:
  workflow_dispatch:
  push:
    branches: [ main ] # comment out for now
  pull_request:
    branches: [ main ] # comment out for now

jobs:

  setup-and-run:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        shard: [1/2, 2/2]
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 18
    - name: Install dependencies
      run: npm ci

    - name: Install Playwright browsers
      run: npx playwright install --with-deps

    - name: Run Playwright tests
      run: npx playwright test --shard ${{ matrix.shard }}

    - name: Upload blob report to GitHub Actions Artifacts
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: merged-reports-as-blob # name of the file you want to have once its uploaded
        path: blob-report # path where the reports are, from where to take the files. Default playwright blog reports stores in 'blob-report'
        retention-days: 90

  merge-reports-and-upload:
  # Merge reports after playwright-tests, even if some shards have failed
    permissions:
      contents: read
      pages: write
      id-token: write

    if: always()
    needs: [setup-and-run]
    
    runs-on: ubuntu-latest
    outputs:
        timestamp: ${{ steps.timestamp.outputs.timestamp }}

    steps:

    # We want a unique identifier to be used when we create subdirectories for our github pages with reports
    - name: Set a timestamp
      id: timestamp
      run: echo "timestamp=$(date --utc +%Y%m%d_%H%M%SZ)" >> "$GITHUB_OUTPUT"

    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 18
    - name: Install dependencies
      run: npm ci

    - name: Download blob reports from GitHub Actions Artifacts
      uses: actions/download-artifact@v3
      with:
        name: merged-reports-as-blob # name of the file stored as artifact (as uploaded at the previous job)
        path: merged-reports-as-blob # name of the folder where the download will be saved

    - name: Merge the blobs into HTML Report
      run: npx playwright merge-reports --reporter html ./merged-reports-as-blob

    - name: Rename folder with playwright results to have unique value
      run: mv playwright-report playwright-report-${{ steps.timestamp.outputs.timestamp }}

    - name: Upload full html report to artifacts
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: playwright-report-${{ steps.timestamp.outputs.timestamp }} # name of the file you want to have once its uploaded
        path: playwright-report-${{ steps.timestamp.outputs.timestamp }} # path where the reports are, from where to take the files
        retention-days: 90

    # - name: Upload HTML Report from folder generated by playwright merge-reports method
    #   uses: actions/upload-pages-artifact@v2
    #   with:
    #     path: './playwright-report-${{ steps.timestamp.outputs.timestamp }}'

    # - name: Deploy to GitHub Pages
    #   id: deployment
    #   uses: actions/deploy-pages@v2

    # - name: Write URL in summary
    #   # run: echo "### Test results - ${{ steps.deployment.outputs.page_url }}${{ steps.timestamp.outputs.timestamp }}" >> $GITHUB_STEP_SUMMARY
    #   run: echo "### Test results - ${{ steps.deployment.outputs.page_url }}" >> $GITHUB_STEP_SUMMARY

  publish-reports:
    permissions:
      contents: read
      pages: write
      id-token: write

    if: always()
    needs: [setup-and-run, merge-reports-and-upload]
        
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        ref: gh-pages

    - name: Download zipped HTML report
      uses: actions/download-artifact@v2
      with:
        name: playwright-report-${{ needs.merge-reports-and-upload.outputs.timestamp }} # name of the file stored as artifact (omitting this param will download all artifacts)
        path: playwright-report-${{ needs.merge-reports-and-upload.outputs.timestamp }} # name of the folder where the download will be saved

    - name: Set Git User
    # see: https://github.com/actions/checkout/issues/13#issuecomment-724415212
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
    
    - name: Show me the files
      run: |
       ls -R
        
    - name: Push the new files to github pages
      run: |
        git add .
        git commit -m "report for run-id ${{ github.run_id }} and report id ${{ needs.merge-reports-and-upload.outputs.timestamp }}"
        git pull --rebase
        git push
        if [ $? -eq 0 ]; then
        echo "Successfully pushed HTML report to repo."
        exit 0
        fi
        
    - name: Write URL in summary
      run: echo "### Test results - https://${{ github.repository_owner }}.github.io/playwright-example-with-typescript/playwright-report-${{ needs.merge-reports-and-upload.outputs.timestamp }}" >> $GITHUB_STEP_SUMMARY
